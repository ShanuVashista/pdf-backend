{
  "x-generator": "NSwag v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "CardCom API",
    "version": "11.0"
  },
  "servers": [
    {
      "url": "https://secure.cardcom.solutions/"
    }
  ],

  "paths": {
    "/api/v11/LowProfile/Create": {
      "post": {
        "tags": ["LowProfile"],
        "summary": "Create a new Iframe \\ Redirect page",
        "description": "Create iframe redirect page to charge the customer ",
        "operationId": "LowProfile_Create",
        "requestBody": {
          "x-name": "CreateLowProfile",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateLowProfile"
                  }
                ]
              },
              "examples": {
                "Charge and Create Doc": {
                  "description": "",
                  "value": {
                    "TerminalNumber": 1000,
                    "ApiName": "MyApiDemo",
                    "ReturnValue": "Z12332X",
                    "Amount": 10.5,
                    "SuccessRedirectUrl": "https://www.google.com",
                    "FailedRedirectUrl": "https://www.yahoo.com",
                    "WebHookUrl": "https://www.mysite.com/CardComLPWebHook",
                    "ProductName": "Demo Product"
                  }
                },
                "Charge Only": {
                  "description": "",
                  "value": {
                    "TerminalNumber": 1000,
                    "ApiName": "MyApiDemo",
                    "ReturnValue": "Z12332X",
                    "Amount": 10.5,
                    "SuccessRedirectUrl": "https://www.google.com",
                    "FailedRedirectUrl": "https://www.yahoo.com",
                    "WebHookUrl": "https://www.mysite.com/CardComLPWebHook",
                    "Document": {
                      "To": "test client",
                      "Email": "test@testDomain.com",
                      "Products": [
                        {
                          "Description": "my item to sell",
                          "UnitCost": 10.5
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLowProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request , see 'Description' in response for more information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          }
        },
        "callbacks": {
          "single": {
            "WebHookUrl": {
              "post": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "nullable": true,
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/LowProfileResult"
                          }
                        ]
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                  "200": {
                    "description": "Your server returns this code if it accepts the callback"
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/v11/LowProfile/GetResult": {
      "get": {
        "tags": ["LowProfile"],
        "summary": "Get the result of an Iframe \\ Redirect deal",
        "description": "Create iframe redirect page to charge the customer ",
        "operationId": "LowProfile_GetResult",
        "requestBody": {
          "x-name": "GetLowProfileResult",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetLowProfileResult"
                  }
                ]
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LowProfileResult"
                }
              }
            }
          },
          "401": {
            "description": "Invalid username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request , see 'Description' in response for more information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          }
        }
      }
    },

    "/api/v11/RecuringPayments/GetRecurringPayment": {
      "get": {
        "tags": ["RecuringPayments"],
        "summary": "Get recurring payment info",
        "description": "Recurring Payments",
        "operationId": "RecuringPayments_GetRecurringPayment",
        "requestBody": {
          "x-name": "query",
          "description": "body Params",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RecurringPaymentQuery"
                  }
                ]
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtGetRecurringPaymentRsp"
                }
              }
            }
          },
          "401": {
            "description": "Invalid username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request , see 'Description' in response for more information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          }
        }
      }
    },

    "/api/v11/RecuringPayments/GetMuhlafimByDate": {
      "get": {
        "tags": ["RecuringPayments"],
        "summary": "Get update token by update date",
        "description": "Recurring Payments",
        "operationId": "RecuringPayments_GetMuhlafimByDate",
        "parameters": [
          {
            "name": "apiUserName",
            "in": "query",
            "required": true,
            "description": "API User Name",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "apiPassword",
            "in": "query",
            "required": true,
            "description": "API Password",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "description": "From Create Date (yyyy-MM-dd)",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 3
          },
          {
            "name": "toDate",
            "in": "query",
            "required": true,
            "description": "To Create Date (yyyy-MM-dd)",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtGetListOfFilesRsp"
                }
              }
            }
          },
          "401": {
            "description": "Invalid username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request , see 'Description' in response for more information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          }
        }
      }
    },

    "/api/v11/RecuringPayments/IsBankNumberValid": {
      "get": {
        "tags": ["RecuringPayments"],
        "summary": "Is Bank Number Valid",
        "description": "Recurring Payments",
        "operationId": "RecuringPayments_IsBankNumberValid",
        "requestBody": {
          "x-name": "request",
          "description": "body Params",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IsBankNumberValidReq"
                  }
                ]
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtIsBankNumberValidRsp"
                }
              }
            }
          },
          "401": {
            "description": "Invalid username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request , see 'Description' in response for more information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          }
        }
      }
    },

    "/api/v11/Account/GetByAccountId": {
      "post": {
        "tags": ["Account"],
        "summary": "Get Account info by cardcom Account Id",
        "description": "Account operation ",
        "operationId": "Account_GetByAccountId",
        "requestBody": {
          "x-name": "GetAccountById",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GetAccountById"
                  }
                ]
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountByIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request , see 'Description' in response for more information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          }
        }
      }
    },

    "/api/v11/Transactions/ListTransactions": {
      "post": {
        "tags": ["Transactions"],
        "summary": "List of Tranzactions",
        "description": "Tranzactions operation ",
        "operationId": "Transactions_ListTransactions",
        "requestBody": {
          "x-name": "getTransactionReq",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ListTransactionsReq"
                  }
                ]
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Invalid username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request , see 'Description' in response for more information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          },
          "200": {
            "description": "successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTranzactionsResp"
                }
              }
            }
          }
        }
      }
    },

    "/api/v11/Transactions/Tranzaction": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Do Tranzaction",
        "description": "Tranzactions operation ",
        "operationId": "Transactions_Tranzaction",
        "requestBody": {
          "x-name": "req",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DoTranzaction"
                  }
                ]
              },
              "examples": {
                "Charge Token": {
                  "description": "",
                  "value": {
                    "TerminalNumber": 1000,
                    "ApiName": "MyApiDemo",
                    "Amount": 20.11,
                    "Token": "84cc1f4f-c089-410b-9f93-6437ac9abba6",
                    "CardExpirationMMYY": "1225",
                    "CVV2": "123"
                  }
                },
                "Charge CreditCard": {
                  "description": "",
                  "value": {
                    "TerminalNumber": 1000,
                    "ApiName": "MyApiDemo",
                    "Amount": 20.11,
                    "CardNumber": "4580000000000000",
                    "CardExpirationMMYY": "1225",
                    "CVV2": "123"
                  }
                }
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Invalid username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request , see 'Description' in response for more information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          },
          "200": {
            "description": "successful request, see 'ResponseCode' if request succeeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranzactionInfo"
                }
              }
            }
          }
        }
      }
    },

    "/api/v11/Transactions/RefundByTranzactionId": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Refund By Tranzaction Id",
        "description": "Tranzactions operation ",
        "operationId": "Transactions_RefundByTranzactionId",
        "requestBody": {
          "x-name": "req",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RefundByTranzactionIdReq"
                  }
                ]
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "401": {
            "description": "Invalid username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request , see 'Description' in response for more information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          },
          "200": {
            "description": "successful request, see 'ResponseCode' if request succeeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundByTranzactionIdResp"
                }
              }
            }
          }
        }
      }
    },

    "/api/v11/Documents/SendAllDocumentsToEmail": {
      "post": {
        "tags": ["Documents"],
        "summary": "send PDF docuemnts to email by date range",
        "description": "Documents operations ",
        "operationId": "Documents_SendAllDocumentsToEmail",
        "requestBody": {
          "x-name": "SendAllDocumentsToEmailRequest",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SendAllDocumentsToEmailRequest"
                  }
                ]
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendAllDocumentsToEmailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request , see 'Description' in response for more information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "CreateLowProfileResponse": {
        "type": "object",
        "description": "Response for creating low profile page",
        "additionalProperties": false,
        "properties": {
          "ResponseCode": {
            "type": "integer",
            "description": "if equel zero then success , else , a develper error see Description for more info ",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Description of the ResponseCode",
            "maxLength": 250,
            "nullable": true
          },
          "LowProfileId": {
            "type": "string",
            "description": "The unique Id of the low profile page - save it in you data base!",
            "format": "guid",
            "nullable": true
          },
          "Url": {
            "type": "string",
            "description": "the url you need to redirect the card holder",
            "nullable": true
          },
          "UrlToPayPal": {
            "type": "string",
            "description": "the url directly to paypal",
            "nullable": true
          },
          "UrlToBit": {
            "type": "string",
            "description": "the url directly to bit",
            "nullable": true
          }
        }
      },
      "ErrorInfo": {
        "type": "object",
        "description": "error information for non http status 200",
        "additionalProperties": false,
        "properties": {
          "ResponseCode": {
            "type": "integer",
            "description": "if equel zero then success , a develper error see Description for more info ",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Description of the ResponseCode",
            "nullable": true
          }
        }
      },
      "CreateLowProfile": {
        "type": "object",
        "description": "create a new one time, Iframe \\ redirect page",
        "additionalProperties": false,
        "required": [
          "TerminalNumber",
          "ApiName",
          "Amount",
          "SuccessRedirectUrl",
          "FailedRedirectUrl",
          "WebHookUrl"
        ],
        "properties": {
          "TerminalNumber": {
            "type": "integer",
            "description": "Cardcom terminal number",
            "format": "int32"
          },
          "ApiName": {
            "type": "string",
            "description": "Api Name for authentication",
            "minLength": 1
          },
          "Operation": {
            "description": "Type of operation to perform , default - ChargeOnly",
            "default": "ChargeOnly",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Operation"
              }
            ]
          },
          "ReturnValue": {
            "type": "string",
            "description": "A string of data to save on the tranzaction, usually send your unique order Id, you will get it back in the WebHook URL",
            "maxLength": 250,
            "nullable": true
          },
          "Amount": {
            "type": "number",
            "description": "Amount of tranzaction (12.36)",
            "format": "decimal"
          },
          "SuccessRedirectUrl": {
            "type": "string",
            "description": "Url to redirect the card holder on successful tranzaction , (http(s)://site.com/Success)",
            "maxLength": 500,
            "minLength": 1
          },
          "FailedRedirectUrl": {
            "type": "string",
            "description": "Url to redicet on failed tranzaction (http(s)://site.com/failed)",
            "maxLength": 500,
            "minLength": 1
          },
          "WebHookUrl": {
            "type": "string",
            "description": "<a href=\"http://www.cardcom.co.il\">Help</a>",
            "maxLength": 500,
            "minLength": 1
          },
          "ProductName": {
            "type": "string",
            "description": "Text to show to card holder if no documents is send",
            "maxLength": 250,
            "nullable": true
          },
          "Language": {
            "type": "string",
            "description": "Page Language",
            "default": "he",
            "maxLength": 2,
            "nullable": true
          },
          "ISOCoinId": {
            "type": "integer",
            "description": "ISO Coin Code ,1 - ILS, 2 - USD, else ISO Coin from list : https://en.wikipedia.org/wiki/ISO_4217",
            "format": "int32",
            "default": 1,
            "nullable": true
          },
          "UIDefinition": {
            "description": "UI Definition for the created page",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UIDefinition"
              }
            ]
          },
          "AdvancedDefinition": {
            "description": "Advanced tranzaction definition",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdvancedLPDefinition"
              }
            ]
          },
          "Document": {
            "description": "Document information",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DocumentLP"
              }
            ]
          }
        }
      },
      "Operation": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "ChargeOnly",
          "ChargeAndCreateToken",
          "CreateTokenOnly",
          "SuspendedDeal"
        ],
        "enum": [
          "ChargeOnly",
          "ChargeAndCreateToken",
          "CreateTokenOnly",
          "SuspendedDeal"
        ]
      },
      "UIDefinition": {
        "type": "object",
        "description": "UI Definition for the created page",
        "additionalProperties": false,
        "properties": {
          "IsHideCardOwnerName": {
            "type": "boolean",
            "description": "Hide card Owner name",
            "default": false,
            "nullable": true
          },
          "CardOwnerNameValue": {
            "type": "string",
            "description": "Fill the value of CardOwnerName input box",
            "default": "",
            "maxLength": 50,
            "nullable": true
          },
          "IsHideCardOwnerPhone": {
            "type": "boolean",
            "description": "Hide card owner phone number",
            "default": false,
            "nullable": true
          },
          "CardOwnerPhoneValue": {
            "type": "string",
            "description": "Fill the value of CardOwnerPhone input box",
            "maxLength": 50,
            "nullable": true
          },
          "IsCardOwnerPhoneRequired": {
            "type": "boolean",
            "description": "Is CardOwnerPhone input box required",
            "default": true,
            "nullable": true
          },
          "CardOwnerEmailValue": {
            "type": "string",
            "description": "fill the value of card owner email",
            "maxLength": 50,
            "nullable": true
          },
          "IsHideCardOwnerEmail": {
            "type": "boolean",
            "description": "Hide card owner email",
            "default": false,
            "nullable": true
          },
          "IsCardOwnerEmailRequired": {
            "type": "boolean",
            "description": "Is card owner email input box required",
            "default": true,
            "nullable": true
          },
          "IsHideCardOwnerIdentityNumber": {
            "type": "boolean",
            "description": "Hide card ownder identity number",
            "default": false,
            "nullable": true
          },
          "IsHideCVV": {
            "type": "boolean",
            "description": "Hide card number CVV",
            "default": false,
            "nullable": true
          },
          "CSSUrl": {
            "type": "string",
            "description": "Full URL address of CSS file. it will be injected to page, required CardCom premition (http(s)://site.com/file.css)",
            "maxLength": 250,
            "nullable": true
          },
          "CustomFields": {
            "type": "array",
            "description": "Fill the value of CustomFields input box by Field Id",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          }
        }
      },
      "CustomField": {
        "type": "object",
        "description": "Custom field",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Custom field id",
            "maximum": 25.0,
            "minimum": 1.0
          },
          "Value": {
            "type": "string",
            "description": "Custom field value",
            "maxLength": 50
          }
        }
      },
      "AdvancedLPDefinition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "VirtualTerminal": {
            "description": "virtual terminal mode propertis",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VirtualTerminalParams"
              }
            ]
          },
          "JValidateType": {
            "description": "Type of tranzaction for credit card in operation : CreateTokenOnly or Suspended deal, can be J2 (simple validation) or J5 (capture)",
            "default": 5,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/JValidateType"
              }
            ]
          },
          "IsAVSEnable": {
            "type": "boolean",
            "description": "Is AVS enabled validation enabled",
            "default": false,
            "nullable": true
          },
          "SapakMutav": {
            "type": "string",
            "description": "SapakMutav number, for meaged terminals",
            "maxLength": 15,
            "nullable": true
          },
          "CreditType": {
            "type": "integer",
            "description": "Type of credit for the card, for israel cards only.",
            "default": 1,
            "nullable": true
          },
          "IsRefundDeal": {
            "type": "boolean",
            "description": "Is the tranzaction will be a refund deal",
            "default": false,
            "nullable": true
          },
          "ApiPassword": {
            "type": "string",
            "description": "Required only if IsRefundDeal is true",
            "nullable": true
          },
          "ISOCoinName": {
            "type": "string",
            "description": "ISO name (alternative to IsoCoinId). ISO Coin Name from list : https://en.wikipedia.org/wiki/ISO_4217",
            "maxLength": 3,
            "nullable": true
          },
          "MinNumOfPayments": {
            "type": "integer",
            "description": "Minimum number of payment to show to card holder",
            "format": "int32",
            "default": 1,
            "maximum": 36.0,
            "minimum": 1.0,
            "nullable": true
          },
          "MaxNumOfPayments": {
            "type": "integer",
            "description": "Maximum number of payment to show to card holder , default 1",
            "format": "int32",
            "default": 1,
            "maximum": 36.0,
            "minimum": 1.0,
            "nullable": true
          },
          "SelectedNumOfPayments": {
            "type": "integer",
            "description": "Change the selectd number of payments in the UI selection box , default (MinNumOfPayments)",
            "default": 0,
            "nullable": true
          },
          "FirstPayment": {
            "type": "number",
            "description": "select the first payment , default (null) - auto. req : 1. Must Send DefaultNumOfPayments  2. FirstPayment+ ConstPayment*(DefaultNumOfPayments-1) == Amount ",
            "format": "decimal",
            "nullable": true
          },
          "ConstPayment": {
            "type": "number",
            "description": "set the const payment , default (null) - auto. req : 1. Must Send DefaultNumOfPayments  2. FirstPayment+ ConstPayment*(DefaultNumOfPayments-1) == Amount ",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "VirtualTerminalParams": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "IsEnable": {
            "type": "boolean",
            "description": "Set to True if the tranzactio will be charge by the merchent and not by the card holder",
            "default": false,
            "nullable": true
          },
          "IsOpenSum": {
            "type": "boolean",
            "description": "allow the merchent to change the sum of the tranzaction",
            "default": false,
            "nullable": true
          },
          "ChargeOnSwipe": {
            "type": "boolean",
            "description": "When using Credit Card reader , will the \"commit\" button be press after the merchent swipe the credit card",
            "default": false,
            "nullable": true
          }
        }
      },
      "JValidateType": {
        "type": "integer",
        "description": "",
        "x-enumNames": ["J2", "J5"],
        "enum": [2, 5]
      },
      "DocumentLP": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentBase"
          },
          {
            "type": "object",
            "description": "Create document in Low Profile interface",
            "additionalProperties": false,
            "properties": {
              "IsAllowEditDocument": {
                "type": "boolean",
                "description": "Allow the card owner to edit the \"document\" information: To, address, phone... (not the products and amount) , default = false",
                "default": false,
                "nullable": true
              },
              "IsShowOnlyDocument": {
                "type": "boolean",
                "description": "Will only show the document information to the card owner. NO DOCCUMENT WILL BE CREATED. default = false (system will create a document)",
                "default": false,
                "nullable": true
              }
            }
          }
        ]
      },
      "DocumentBase": {
        "type": "object",
        "additionalProperties": false,
        "required": ["Name"],
        "properties": {
          "DocumentTypeToCreate": {
            "description": "Document type to create,  default = 0, will automatically update from admin panel configuration",
            "default": "Auto",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DocumentToCreate"
              }
            ]
          },
          "Name": {
            "type": "string",
            "description": "document To",
            "maxLength": 50,
            "minLength": 1
          },
          "TaxId": {
            "type": "string",
            "description": "Business registration number or user Identity number",
            "maxLength": 50,
            "nullable": true
          },
          "Email": {
            "type": "string",
            "description": "Email To send the document to",
            "maxLength": 50,
            "nullable": true
          },
          "IsSendByEmail": {
            "type": "boolean",
            "description": "Send the document by email",
            "default": true,
            "nullable": true
          },
          "AddressLine1": {
            "type": "string",
            "description": "Address Line 1",
            "maxLength": 50,
            "nullable": true
          },
          "AddressLine2": {
            "type": "string",
            "description": "Address Line 2",
            "maxLength": 50,
            "nullable": true
          },
          "City": {
            "type": "string",
            "description": "City",
            "maxLength": 50,
            "nullable": true
          },
          "Mobile": {
            "type": "string",
            "description": "Mobile phone number",
            "maxLength": 50,
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "Land line phone number",
            "maxLength": 50,
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "description": "comments to print on the document",
            "maxLength": 250,
            "nullable": true
          },
          "IsVatFree": {
            "type": "boolean",
            "description": "Is all the items in this document are VAT free?",
            "default": false,
            "nullable": true
          },
          "DepartmentId": {
            "type": "integer",
            "description": "department ID as show at the admin panel, for reports",
            "maximum": 9999.0,
            "minimum": 0.0,
            "nullable": true
          },
          "AdvancedDefinition": {
            "description": "Advanced document definition",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdvancedDocumentDefinition"
              }
            ]
          },
          "Products": {
            "type": "array",
            "description": "Document products",
            "items": {
              "$ref": "#/components/schemas/Products"
            }
          },
          "ExternalId": {
            "type": "string",
            "description": "External Id, custom info on document",
            "maxLength": 50,
            "nullable": true
          }
        }
      },
      "DocumentToCreate": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Auto",
          "Receipt",
          "TaxInvoiceAndReceipt",
          "TaxInvoiceAndReceiptRefund",
          "ReceiptRefund",
          "Quote",
          "Order",
          "DeliveryNote",
          "DeliveryNoteRefund",
          "ProformaInvoice",
          "DemandForPayment",
          "DemandForPaymentRefund",
          "TaxInvoice",
          "TaxInvoiceRefund",
          "ReceiptForTaxInvoice",
          "DonationReceipt",
          "DonationReceiptRefund",
          "ReceiptForTaxInvoiceRefund"
        ],
        "enum": [
          "Auto",
          "Receipt",
          "Receipt",
          "TaxInvoiceAndReceiptRefund",
          "ReceiptRefund",
          "Quote",
          "Order",
          "DeliveryNote",
          "DeliveryNoteRefund",
          "ProformaInvoice",
          "DemandForPayment",
          "DemandForPaymentRefund",
          "TaxInvoice",
          "TaxInvoiceRefund",
          "ReceiptForTaxInvoice",
          "DonationReceipt",
          "DonationReceiptRefund",
          "ReceiptForTaxInvoiceRefund"
        ]
      },
      "AdvancedDocumentDefinition": {
        "type": "object",
        "description": "Advanced document definition",
        "additionalProperties": false,
        "properties": {
          "IsAutoCreateUpdateAccount": {
            "description": "Is to Auto update or create an Account, default = auto, will automatically update from admin panel configuration",
            "default": "auto",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigBool"
              }
            ]
          },
          "AccountForeignKey": {
            "type": "string",
            "description": "The account number on a Foreign system, use for transfer to 3-party account system ( hashavshevet, SAP )",
            "maxLength": 50,
            "nullable": true
          },
          "SiteUniqueId": {
            "type": "string",
            "description": "Your system unique Id for this account",
            "maxLength": 50,
            "nullable": true
          },
          "AccountID": {
            "type": "integer",
            "description": "Unique account ID in cardcom system, account must exist in CardCom system",
            "format": "int32",
            "nullable": true
          },
          "IsLoadInfoFromAccountID": {
            "type": "boolean",
            "description": "If AccountID is passed, CardCom system will update the document information ( To ,HP_TZ, Email ...) from existing accounts information",
            "default": false,
            "nullable": true
          }
        }
      },
      "ConfigBool": {
        "type": "string",
        "description": "",
        "x-enumNames": ["auto", "true", "false"],
        "enum": ["auto", "true", "false"]
      },
      "Products": {
        "type": "object",
        "description": "Products",
        "additionalProperties": false,
        "required": ["Description", "UnitCost"],
        "properties": {
          "ProductID": {
            "type": "string",
            "description": "Product ID , exemple 'AVG-BB-10;",
            "maxLength": 50,
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "product description",
            "maxLength": 250,
            "minLength": 1
          },
          "Quantity": {
            "type": "number",
            "description": "quantity",
            "format": "decimal",
            "default": 1,
            "maximum": 99999.99,
            "minimum": -99999.99,
            "nullable": true
          },
          "UnitCost": {
            "type": "number",
            "description": "cost of one unit",
            "format": "decimal",
            "default": 0,
            "maximum": 9999999999.99,
            "minimum": -9999999999.99
          },
          "TotalLineCost": {
            "type": "number",
            "description": "Recommended, if the Quantity contains decimal point send the total line cost to prevent round errors",
            "format": "decimal",
            "default": 0,
            "nullable": true
          },
          "IsVatFree": {
            "type": "boolean",
            "description": "Is this product VAT Free , used for mix VAT items in one documents",
            "default": false,
            "nullable": true
          }
        }
      },
      "LowProfileResult": {
        "type": "object",
        "description": "Result of the low profile page deal",
        "additionalProperties": false,
        "properties": {
          "ResponseCode": {
            "type": "integer",
            "description": "if equal zero then success",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Description of the ResponseCode",
            "nullable": true
          },
          "TerminalNumber": {
            "type": "integer",
            "description": "Cardcom terminal number",
            "format": "int32"
          },
          "LowProfileId": {
            "type": "string",
            "description": "The unique ID of the low profile tranzaction",
            "format": "guid"
          },
          "TranzactionId": {
            "type": "integer",
            "description": "The Id of the Credit card Tranzacion",
            "format": "int64"
          },
          "ReturnValue": {
            "type": "string",
            "description": "Same value that was sent on the CreateLowProfile request",
            "nullable": true
          },
          "Operation": {
            "description": "Type of operation",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Operation"
              }
            ]
          },
          "UIValues": {
            "description": "Will contain the value that the card holder enter in the UI",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LowProfileUIValues"
              }
            ]
          },
          "DocumentInfo": {
            "description": "Will no be null is a documents is created",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DocumentInfo"
              }
            ]
          },
          "TokenInfo": {
            "description": "Created token information, Will no be null at operations:  ChargeAndCreateToken, CreateTokenOnly",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TokenInfo"
              }
            ]
          },
          "SuspendedInfo": {
            "description": "SuspendedI deal information, Will no be null at operations: SuspendedDeal",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SuspendedInfo"
              }
            ]
          },
          "TranzactionInfo": {
            "description": "Tranzaction information, Will no be null at operations: ChargeOnly, ChargeAndCreateToken ",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranzactionInfo"
              }
            ]
          }
        }
      },
      "LowProfileUIValues": {
        "type": "object",
        "description": "values that was filled the the card holder",
        "additionalProperties": false,
        "properties": {
          "CardOwnerEmail": {
            "type": "string",
            "maxLength": 50
          },
          "CardOwnerName": {
            "type": "string",
            "maxLength": 50
          },
          "CardOwnerPhone": {
            "type": "string",
            "maxLength": 50
          },
          "CardOwnerIdentityNumber": {
            "type": "string",
            "maxLength": 50
          },
          "NumOfPayments": {
            "type": "integer"
          },
          "CardYear": {
            "type": "integer",
            "format": "int32"
          },
          "CardMonth": {
            "type": "integer",
            "format": "int32"
          },
          "CustomFields": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          }
        }
      },
      "DocumentInfo": {
        "type": "object",
        "description": "Document create response",
        "additionalProperties": false,
        "properties": {
          "ResponseCode": {
            "type": "integer",
            "description": "if equal zero then success",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Description of the ResponseCode"
          },
          "DocumentType": {
            "description": "document type that was created",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DocumentType"
              }
            ]
          },
          "DocumentNumber": {
            "type": "integer",
            "description": "Uniqe number for this DocumentType",
            "format": "int32"
          },
          "AccountId": {
            "type": "integer",
            "description": "Unique account Id in cardcom system",
            "format": "int32"
          },
          "ForeignAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "SiteUniqueId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DocumentType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Error",
          "Receipt",
          "TaxInvoiceAndReceipt",
          "TaxInvoiceAndReceiptRefund",
          "ReceiptRefund",
          "Quote",
          "Order",
          "SiteCustomerOrder",
          "SiteCustomerOrderRefund",
          "DeliveryNote",
          "DeliveryNoteRefund",
          "ProformaInvoice",
          "DemandForPayment",
          "DemandForPaymentRefund",
          "TaxInvoice",
          "TaxInvoiceRefund",
          "ReceiptForTaxInvoice",
          "DonationReceipt",
          "DonationReceiptRefund",
          "ReceiptForTaxInvoiceRefund"
        ],
        "enum": [
          "Error",
          "Receipt",
          "Receipt",
          "TaxInvoiceAndReceiptRefund",
          "ReceiptRefund",
          "Quote",
          "Order",
          "SiteCustomerOrder",
          "SiteCustomerOrderRefund",
          "DeliveryNote",
          "DeliveryNoteRefund",
          "ProformaInvoice",
          "DemandForPayment",
          "DemandForPaymentRefund",
          "TaxInvoice",
          "TaxInvoiceRefund",
          "ReceiptForTaxInvoice",
          "DonationReceipt",
          "DonationReceiptRefund",
          "ReceiptForTaxInvoiceRefund"
        ]
      },
      "TokenInfo": {
        "type": "object",
        "description": "Create token result, You need to save all of the information in the database next to the account, it will be used in the Token charge process",
        "additionalProperties": false,
        "properties": {
          "Token": {
            "type": "string",
            "description": "Credit card token use it for future charges",
            "format": "guid"
          },
          "TokenExDate": {
            "type": "string",
            "description": "The date that the toke will be deleted from CardCom system, yyyyMMdd"
          },
          "CardYear": {
            "type": "integer",
            "format": "int32"
          },
          "CardMonth": {
            "type": "integer",
            "format": "int32"
          },
          "TokenApprovalNumber": {
            "type": "string",
            "description": "Issuer approval number for J5 (capture) operation"
          },
          "CardOwnerIdentityNumber": {
            "type": "string"
          }
        }
      },
      "SuspendedInfo": {
        "type": "object",
        "description": "SuspendedDeal result",
        "additionalProperties": false,
        "properties": {
          "SuspendedDealId": {
            "type": "integer",
            "description": "Suspended deal Id, can be charge via API or the admin panel ",
            "format": "int32"
          }
        }
      },
      "TranzactionInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ResponseCode": {
            "type": "integer",
            "description": "if equal zero then success , 700 and 701 success for J2 and J5 tranzaction",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Description of the ResponseCode",
            "nullable": true
          },
          "TranzactionId": {
            "type": "integer",
            "description": "The Id of the Credit card Tranzacion",
            "format": "int64"
          },
          "TerminalNumber": {
            "type": "integer",
            "description": "Cardcom terminal number",
            "format": "int32"
          },
          "Amount": {
            "type": "number",
            "description": "Tranzaction amount",
            "format": "decimal"
          },
          "CoinId": {
            "type": "integer",
            "description": "ISO Coin Code ,1 - ILS, 2 - USD, else ISO Coin from list : https://en.wikipedia.org/wiki/ISO_4217",
            "format": "int32"
          },
          "CouponNumber": {
            "type": "string",
            "description": "Coupon Number - מספר שובר",
            "nullable": true
          },
          "CreateDate": {
            "type": "string",
            "description": "Tranzaction date",
            "format": "date-time"
          },
          "Last4CardDigits": {
            "type": "integer",
            "format": "int32"
          },
          "Last4CardDigitsString": {
            "type": "string",
            "nullable": true
          },
          "FirstCardDigits": {
            "type": "integer",
            "format": "int64"
          },
          "JParameter": {
            "type": "string",
            "nullable": true
          },
          "CardMonth": {
            "type": "integer",
            "description": "Credit card Validity Month (MM)"
          },
          "CardYear": {
            "type": "integer",
            "description": "Credit card Validity Month (YY)"
          },
          "ApprovalNumber": {
            "type": "string",
            "nullable": true
          },
          "FirstPaymentAmount": {
            "type": "number",
            "format": "decimal"
          },
          "ConstPaymentAmount": {
            "type": "number",
            "format": "decimal"
          },
          "NumberOfPayments": {
            "type": "integer",
            "format": "int32"
          },
          "CardInfo": {
            "$ref": "#/components/schemas/CardInfo"
          },
          "CardOwnerName": {
            "type": "string",
            "nullable": true
          },
          "CardOwnerPhone": {
            "type": "string",
            "nullable": true
          },
          "CardOwnerEmail": {
            "type": "string",
            "nullable": true
          },
          "CardOwnerIdentityNumber": {
            "type": "string",
            "nullable": true
          },
          "Token": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "CardName": {
            "type": "string",
            "description": "Card name for information only",
            "nullable": true
          },
          "SapakMutav": {
            "type": "string",
            "nullable": true
          },
          "Brand": {
            "$ref": "#/components/schemas/Brand"
          },
          "Acquire": {
            "$ref": "#/components/schemas/Acquire"
          },
          "Issuer": {
            "$ref": "#/components/schemas/Issuer"
          },
          "PaymentType": {
            "$ref": "#/components/schemas/PaymentType"
          },
          "CardNumberEntryMode": {
            "$ref": "#/components/schemas/CardNumberEntryMode"
          },
          "DealType": {
            "$ref": "#/components/schemas/DealType"
          },
          "IsRefund": {
            "type": "boolean"
          },
          "CustomFields": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          }
        }
      },
      "CardInfo": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Israeli",
          "NonIsraeli",
          "FuelCard",
          "ImmediateChargeCard",
          "GiftCard"
        ],
        "enum": [
          "Israeli",
          "NonIsraeli",
          "FuelCard",
          "ImmediateChargeCard",
          "GiftCard"
        ]
      },
      "Brand": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "PrivateCard",
          "MasterCard",
          "Visa",
          "Maestro",
          "AmericanExpress",
          "Isracard",
          "JBC",
          "Discover",
          "Diners"
        ],
        "enum": [
          "PrivateCard",
          "MasterCard",
          "Visa",
          "Maestro",
          "AmericanExpress",
          "Isracard",
          "JBC",
          "Discover",
          "Diners"
        ]
      },
      "Acquire": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Unknown",
          "Isracard",
          "CAL",
          "Diners",
          "AmericanExpress",
          "Laumicard",
          "CardCom",
          "PayPal",
          "Upay"
        ],
        "enum": [
          "Unknown",
          "Isracard",
          "CAL",
          "Diners",
          "AmericanExpress",
          "Laumicard",
          "CardCom",
          "PayPal",
          "Upay"
        ]
      },
      "Issuer": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "NonIsrael",
          "Isracard",
          "CAL",
          "Diners",
          "AmericanExpress",
          "JCB",
          "Laumicard"
        ],
        "enum": [
          "NonIsrael",
          "Isracard",
          "CAL",
          "Diners",
          "AmericanExpress",
          "JCB",
          "Laumicard"
        ]
      },
      "PaymentType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Unknown",
          "Standard",
          "SpecialCredits",
          "ImmediateCharge",
          "CreditClub",
          "SuperCredit",
          "InstallmentCredit",
          "Payments",
          "ClubPatments"
        ],
        "enum": [
          "Unknown",
          "Standard",
          "SpecialCredits",
          "ImmediateCharge",
          "CreditClub",
          "SuperCredit",
          "InstallmentCredit",
          "Payments",
          "ClubPatments"
        ]
      },
      "CardNumberEntryMode": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "MagneticStip",
          "SelfService",
          "GasStationSelfService",
          "Contactless",
          "EmvContactless",
          "MobileContactless",
          "EmvMobileContactless",
          "MobileNumber",
          "Emv",
          "Phone",
          "SignatureOnly",
          "Internet",
          "Fallback",
          "EmptyCandidateList"
        ],
        "enum": [
          "MagneticStip",
          "SelfService",
          "GasStationSelfService",
          "Contactless",
          "EmvContactless",
          "MobileContactless",
          "EmvMobileContactless",
          "MobileNumber",
          "Emv",
          "Phone",
          "SignatureOnly",
          "Internet",
          "Fallback",
          "EmptyCandidateList"
        ]
      },
      "DealType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Information",
          "Debit",
          "Discharge",
          "ForcedCharge",
          "CashBack",
          "CashTransaction",
          "Recurring",
          "BalanceQuery",
          "Cancel",
          "Refund",
          "Recharge"
        ],
        "enum": [
          "Information",
          "Debit",
          "Discharge",
          "ForcedCharge",
          "CashBack",
          "CashTransaction",
          "Recurring",
          "BalanceQuery",
          "Cancel",
          "Refund",
          "Recharge"
        ]
      },
      "GetLowProfileResult": {
        "type": "object",
        "description": "Get iframe \\ redirect result",
        "additionalProperties": false,
        "required": ["TerminalNumber", "ApiName", "LowProfileId"],
        "properties": {
          "TerminalNumber": {
            "type": "integer",
            "description": "Cardcom terminal number",
            "format": "int32"
          },
          "ApiName": {
            "type": "string",
            "description": "Api name for authentication",
            "minLength": 1
          },
          "LowProfileId": {
            "type": "string",
            "description": "The unique Id of the low profile tranzaction",
            "format": "guid",
            "minLength": 1
          }
        }
      },
      "ExtGetRecurringPaymentRsp": {
        "type": "object",
        "description": "List of Recurring Payments",
        "additionalProperties": false,
        "properties": {
          "ResponseCode": {
            "type": "integer",
            "description": "Response code , if it equel to zero than all is OK , else error see Description",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Description for errors only",
            "nullable": true
          },
          "UpdateList": {
            "type": "array",
            "description": "Recurring Payments list",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExtRecurringPaymentsRsp"
            }
          }
        }
      },
      "ExtRecurringPaymentsRsp": {
        "type": "object",
        "description": "Recurring Payment info",
        "additionalProperties": false,
        "properties": {
          "RecurringId": {
            "type": "integer",
            "description": "Cardcom for Recurring Id",
            "format": "int32",
            "nullable": true
          },
          "InternalDecription": {
            "type": "string",
            "description": "private description - not shown to card holder",
            "nullable": true
          },
          "NextDateToBill": {
            "type": "string",
            "description": "next billing date",
            "format": "date-time"
          },
          "TotalNumOfBills": {
            "type": "integer",
            "description": "total num of charges to do",
            "format": "int32"
          },
          "NumOfPaymentsAlreadyCharged": {
            "type": "integer",
            "description": "num of payments already charged",
            "format": "int32",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "description": "is recurring is active and will be chanrge",
            "nullable": true
          },
          "ChargeIntervals": {
            "description": "the chanrge intervals, will be add to NextDateToBill (day, month , year) ",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExtTimeIntervalRsp"
              }
            ]
          },
          "FinalDebitCoinId": {
            "type": "integer",
            "description": "currency to charge , 1- NIS , 2 - USD , else iso currency table",
            "format": "int32"
          },
          "IsDocumentCreate": {
            "type": "boolean",
            "description": "crate a document for the charge",
            "nullable": true
          },
          "DocTypeToCreate": {
            "type": "integer",
            "description": "the doc type that will be created , 0 for auto",
            "format": "int32",
            "nullable": true
          },
          "Comment": {
            "type": "string",
            "description": "private comment - not shown to card holder",
            "nullable": true
          },
          "IsPrintNumOfPayments": {
            "type": "boolean",
            "description": "add num of payments on the item descriptin in the document, add : (TotalNumOfBills of NumOfPaymentsAlreadyCharged )"
          },
          "IsPrintBillMonth": {
            "type": "boolean",
            "description": "add the month of the 'NextDateToBill' to the item description"
          },
          "DepartmentId": {
            "type": "integer",
            "description": "department id - for reports"
          },
          "UserId": {
            "type": "integer",
            "description": "use id - that create the recurring",
            "format": "int32"
          },
          "ReturnValue": {
            "type": "string",
            "description": "custom value used for api ",
            "nullable": true
          },
          "ChargeInTerminal": {
            "type": "integer",
            "description": "termianl number to charge ",
            "format": "int32",
            "nullable": true
          },
          "FlexItem": {
            "description": "amount to charge, only if IsByProducts==false ",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExtFlexibleItemRsp"
              }
            ]
          },
          "IsByProducts": {
            "type": "boolean",
            "description": "if true then ProdList is used to calculate cost , if flase then FlexItem is used to calculate cost "
          },
          "ProdList": {
            "type": "array",
            "description": "list of prod to change , and amount will be taken for the system products table, only if IsByProducts==true ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExtProductRsp"
            }
          }
        }
      },
      "ExtTimeIntervalRsp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "TimeIntervalId": {
            "type": "integer"
          },
          "AddDays": {
            "type": "integer",
            "format": "int32"
          },
          "AddWeeks": {
            "type": "integer",
            "format": "int32"
          },
          "AddMonth": {
            "type": "integer",
            "format": "int32"
          },
          "AddYears": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ExtFlexibleItemRsp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "DocumentLineDesc": {
            "type": "string",
            "nullable": true
          },
          "Price": {
            "type": "number",
            "format": "decimal"
          },
          "IsPriceIncludeVat": {
            "type": "boolean"
          },
          "ProductId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExtProductRsp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ProductId": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "RecurringPaymentQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "apiUserName": {
            "type": "string",
            "description": "API User Name",
            "nullable": true
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password",
            "nullable": true
          },
          "AccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "RecurringId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExtGetListOfFilesRsp": {
        "type": "object",
        "description": "List of new Token to update",
        "additionalProperties": false,
        "properties": {
          "ResponseCode": {
            "type": "integer",
            "description": "Response code , if it equel to zero than all is OK , else error see Description",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Description for errors only",
            "nullable": true
          },
          "UpdateList": {
            "type": "array",
            "description": "Tokens list",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExtUpdateTokens"
            }
          }
        }
      },
      "ExtUpdateTokens": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ID": {
            "type": "integer",
            "description": "Prosses ID",
            "format": "int32"
          },
          "UpdatedTokenList": {
            "type": "array",
            "description": "list of update tokens",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExUpdatTokesProsses"
            }
          }
        }
      },
      "ExUpdatTokesProsses": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32"
          },
          "ExcelRow": {
            "type": "integer",
            "description": "The row number of this work",
            "format": "int32"
          },
          "OriginalStatus": {
            "type": "string",
            "description": "information only , original code of the acquiring",
            "nullable": true
          },
          "Status": {
            "type": "integer",
            "description": "1- New card number , 2- the Card was canceled, there is no new Card Number , 3 - charge back , 4 - card owner ask to cancel deal",
            "format": "int32"
          },
          "Token": {
            "type": "string",
            "nullable": true
          },
          "NewExpirationDateYYYY": {
            "type": "string",
            "nullable": true
          },
          "NewExpirationDateMM": {
            "type": "string",
            "nullable": true
          },
          "Last4Digits": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExtIsBankNumberValidRsp": {
        "type": "object",
        "description": "Is Bank valid",
        "additionalProperties": false,
        "properties": {
          "ResponseCode": {
            "type": "integer",
            "description": "Response code , if it equel to zero than all is OK , else error see Description",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Description for errors only",
            "nullable": true
          }
        }
      },
      "IsBankNumberValidReq": {
        "type": "object",
        "description": "Is Bank valid",
        "additionalProperties": false,
        "properties": {
          "apiUserName": {
            "type": "string",
            "description": "API User Name",
            "nullable": true
          },
          "apiPassword": {
            "type": "string",
            "description": "API Password",
            "nullable": true
          },
          "Bank": {
            "type": "integer",
            "description": "Bank number",
            "format": "int32"
          },
          "Snif": {
            "type": "integer",
            "description": "Snif",
            "format": "int32"
          },
          "Account": {
            "type": "string",
            "description": "Bank Account number",
            "nullable": true
          }
        }
      },
      "GetAccountByIdResponse": {
        "type": "object",
        "description": "get account by id response",
        "additionalProperties": false,
        "properties": {
          "ResponseCode": {
            "type": "integer",
            "description": "if equel zero then success , else , a develper error see Description for more info ",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Description of the ResponseCode",
            "maxLength": 250,
            "nullable": true
          },
          "Account": {
            "description": "Account inforamtion",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Account"
              }
            ]
          }
        }
      },
      "Account": {
        "type": "object",
        "description": "Account data",
        "additionalProperties": false,
        "required": ["Name"],
        "properties": {
          "AccountId": {
            "type": "integer",
            "description": "Unique account Id in cardcom system, account must exist in CardCom system ",
            "format": "int32"
          },
          "Name": {
            "type": "string",
            "description": "Account Company name of last name",
            "maxLength": 50,
            "minLength": 1
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "TaxId": {
            "type": "string",
            "description": "Business registration number or user Identity number",
            "maxLength": 50,
            "nullable": true
          },
          "City": {
            "type": "string",
            "description": "City",
            "maxLength": 50,
            "nullable": true
          },
          "AddressLine1": {
            "type": "string",
            "description": "Address Line 1",
            "maxLength": 50,
            "nullable": true
          },
          "AddressLine2": {
            "type": "string",
            "description": "Address Line 2",
            "maxLength": 50,
            "nullable": true
          },
          "Mobile": {
            "type": "string",
            "description": "Mobile phone number",
            "maxLength": 50,
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "Land line phone number",
            "maxLength": 50,
            "nullable": true
          },
          "Email": {
            "type": "string",
            "maxLength": 50,
            "nullable": true
          },
          "IsVatFree": {
            "type": "boolean",
            "description": "Is the client is VAT Free?",
            "default": false,
            "nullable": true
          },
          "ZipCode": {
            "type": "string",
            "maxLength": 50,
            "nullable": true
          },
          "PoBox": {
            "type": "string",
            "maxLength": 50,
            "nullable": true
          },
          "Fax": {
            "type": "string",
            "maxLength": 50,
            "nullable": true
          },
          "OpenDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Comments": {
            "type": "string",
            "maxLength": 250,
            "nullable": true
          },
          "AccountForeignKey": {
            "type": "string",
            "description": "The account number on a Foreign system, use for transfer to 3-party account system ( hashavshevet, SAP )",
            "maxLength": 50,
            "nullable": true
          },
          "SiteUniqueId": {
            "type": "string",
            "description": "Your system unique Id for this account",
            "maxLength": 50,
            "nullable": true
          },
          "ContactName": {
            "type": "string",
            "maxLength": 50,
            "nullable": true
          },
          "ISOCoinId": {
            "type": "integer",
            "description": "Default coin to use in the UI manual document creation",
            "format": "int32",
            "default": 0
          },
          "Balance": {
            "type": "number",
            "format": "decimal"
          },
          "OpeningBalance": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "GetAccountById": {
        "type": "object",
        "additionalProperties": false,
        "required": ["ApiName", "ApiPassword", "AccountId"],
        "properties": {
          "ApiName": {
            "type": "string",
            "description": "Api name for authentication",
            "minLength": 1
          },
          "ApiPassword": {
            "type": "string",
            "description": "Api password for authentication",
            "minLength": 1
          },
          "AccountId": {
            "type": "integer",
            "description": "Account Id to query",
            "format": "int32"
          }
        }
      },
      "GetTranzactionsResp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ResponseCode": {
            "type": "integer",
            "description": "if equel zero then success , else , a develper error see Description for more info ",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Description of the ResponseCode",
            "maxLength": 250,
            "nullable": true
          },
          "Tranzactions": {
            "type": "array",
            "description": "Tranzactions",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TranzactionInfo"
            }
          },
          "Page": {
            "type": "integer",
            "format": "int32"
          },
          "Page_size": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ListTransactionsReq": {
        "type": "object",
        "description": "list transactions request",
        "additionalProperties": false,
        "required": [
          "ApiName",
          "ApiPassword",
          "FromDate",
          "ToDate",
          "Page",
          "Page_size"
        ],
        "properties": {
          "ApiName": {
            "type": "string",
            "description": "Api name for authentication",
            "minLength": 1
          },
          "ApiPassword": {
            "type": "string",
            "description": "Api password for authentication",
            "minLength": 1
          },
          "FromDate": {
            "type": "string",
            "description": "Form Date DDMMYYYY",
            "minLength": 1
          },
          "ToDate": {
            "type": "string",
            "description": "To Date DDMMYYYY",
            "minLength": 1
          },
          "TranStatus": {
            "description": "status of tranzaction to return , default - Completed",
            "default": "Success",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListTransactionStatus"
              }
            ]
          },
          "Page": {
            "type": "integer",
            "description": "page from 1",
            "format": "int32"
          },
          "Page_size": {
            "type": "integer",
            "description": "page size 10 - 2000",
            "format": "int32"
          },
          "LimitForTerminal": {
            "type": "integer",
            "description": "return only transaction for a specific terminal in this company",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ListTransactionStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": ["Success", "All"],
        "enum": ["Success", "All"]
      },
      "DoTranzaction": {
        "type": "object",
        "additionalProperties": false,
        "required": ["TerminalNumber", "ApiName", "Amount"],
        "properties": {
          "TerminalNumber": {
            "type": "integer",
            "description": "Cardcom terminal number",
            "format": "int32"
          },
          "ApiName": {
            "type": "string",
            "description": "Api Name for authentication",
            "minLength": 1
          },
          "Amount": {
            "type": "number",
            "description": "Amount of tranzaction",
            "format": "decimal"
          },
          "CardNumber": {
            "type": "string",
            "description": "credit Card number",
            "nullable": true
          },
          "Token": {
            "type": "string",
            "description": "credit Card token",
            "format": "guid",
            "nullable": true
          },
          "CardExpirationMMYY": {
            "type": "string",
            "description": "credit Card Expiration date ",
            "nullable": true
          },
          "CVV2": {
            "type": "string",
            "description": "credit Card CVV ",
            "nullable": true
          },
          "ExternalUniqTranId": {
            "type": "string",
            "description": "External Uniq Tran Id , send your uniq trnazaction id to prevent duplication of tranzaction. if the same ExternalUniqTranId will be send you will receive and error code 608. see 'ExternalUniqUniqTranIdResponse' ",
            "nullable": true
          },
          "ExternalUniqUniqTranIdResponse": {
            "type": "boolean",
            "description": "False - will return error code 608 if the same 'ExternalUniqTranId' use used , Ture - will not charge the card ,BUT will return the original response of the tranzaction.",
            "default": false,
            "nullable": true
          },
          "NumOfPayments": {
            "type": "integer",
            "description": "Maximum number of payment to show to card holder , default 1",
            "format": "int32",
            "default": 1,
            "maximum": 36.0,
            "minimum": 1.0,
            "nullable": true
          },
          "CardOwnerInformation": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardOwnerInformation"
              }
            ]
          },
          "ISOCoinId": {
            "type": "integer",
            "description": "ISO Coin Code ,1 - ILS, 2 - USD, else ISO Coin from list : https://en.wikipedia.org/wiki/ISO_4217",
            "format": "int32",
            "default": 1,
            "nullable": true
          },
          "CustomFields": {
            "type": "array",
            "description": "Fill the value of CustomFields information",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          },
          "Advanced": {
            "description": "Advanced transaction options",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdvancedTran"
              }
            ]
          },
          "Document": {
            "description": "Document information , will create document if transaction succeeded",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DocumentTran"
              }
            ]
          }
        }
      },
      "CardOwnerInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Phone": {
            "type": "string",
            "nullable": true
          },
          "FullName": {
            "type": "string",
            "nullable": true
          },
          "IdentityNumber": {
            "type": "string",
            "description": "credit card owner identity number for israel cards only",
            "nullable": true
          },
          "AvsZip": {
            "type": "string",
            "nullable": true
          },
          "AvsAddress": {
            "type": "string",
            "nullable": true
          },
          "AvsCity": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AdvancedTran": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ApiPassword": {
            "type": "string",
            "description": "Required only if 'IsRefund' is true",
            "nullable": true
          },
          "IsRefund": {
            "type": "boolean",
            "description": "Is refund tranzaction , 'ApiPassword' is Required to use this option"
          },
          "ISOCoinName": {
            "type": "string",
            "description": "ISO name (alternative and override to 'IsoCoinId'). ISO Coin Name from list : https://en.wikipedia.org/wiki/ISO_4217",
            "maxLength": 3,
            "nullable": true
          },
          "JValidateType": {
            "description": "Type of tranzaction for credit card in operation : CreateTokenOnly or Suspended deal, can be J2 (simple validation) or J5 (capture)",
            "default": 5,
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/JValidateType"
              }
            ]
          },
          "SapakMutav": {
            "type": "string",
            "description": "SapakMutav number, for meaged terminals",
            "maxLength": 15,
            "nullable": true
          },
          "CreditType": {
            "type": "integer",
            "description": "Type of credit for the card, for israel cards only.",
            "default": 1,
            "nullable": true
          },
          "MTI": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AccountIdToGetCardNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ApprovalNumber": {
            "type": "string",
            "nullable": true
          },
          "FirstPayment": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "ConstPayment": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "IsAutoRecurringPayment": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "IsCreateToken": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "SendNote": {
            "type": "boolean",
            "default": false,
            "nullable": true
          }
        }
      },
      "DocumentTran": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ManualNumber": {
                "type": "string",
                "nullable": true
              },
              "DocumentDateDDMMYYYY": {
                "type": "string",
                "nullable": true
              },
              "ValueDate": {
                "type": "string",
                "nullable": true
              },
              "Languge": {
                "type": "string",
                "nullable": true
              },
              "IsSendSMS": {
                "type": "boolean",
                "default": true,
                "nullable": true
              }
            }
          }
        ]
      },
      "RefundByTranzactionIdResp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ResponseCode": {
            "type": "integer",
            "description": "if equel zero then success , else , a develper error see Description for more info ",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Description of the ResponseCode",
            "maxLength": 250,
            "nullable": true
          },
          "NewTranzactionId": {
            "type": "integer",
            "description": "refund tranzaction id ",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "RefundByTranzactionIdReq": {
        "type": "object",
        "additionalProperties": false,
        "required": ["ApiName", "ApiPassword", "TranzactionId"],
        "properties": {
          "ApiName": {
            "type": "string",
            "description": "Api name for authentication",
            "minLength": 1
          },
          "ApiPassword": {
            "type": "string",
            "description": "Api password for authentication",
            "minLength": 1
          },
          "TranzactionId": {
            "type": "integer",
            "description": "The Id for refund",
            "format": "int64"
          },
          "PartialSum": {
            "type": "number",
            "description": "Partial Sum for refund",
            "format": "decimal",
            "nullable": true
          },
          "CancelOnly": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "SapakMutav": {
            "type": "string",
            "description": "override original tranzaction SapalMutav value",
            "nullable": true
          },
          "CustomFields": {
            "type": "array",
            "description": "Custom Fields",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          }
        }
      },
      "SendAllDocumentsToEmailResponse": {
        "type": "object",
        "description": "send pdf documents by email",
        "additionalProperties": false,
        "properties": {
          "ResponseCode": {
            "type": "integer",
            "description": "if equel zero then success , else , a develper error see Description for more info ",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Description of the ResponseCode",
            "maxLength": 250,
            "nullable": true
          }
        }
      },
      "SendAllDocumentsToEmailRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ApiName",
          "ApiPassword",
          "EmailTo",
          "FromDateYYYYMMDD",
          "ToDateYYYYMMDD"
        ],
        "properties": {
          "ApiName": {
            "type": "string",
            "description": "Api name for authentication",
            "minLength": 1
          },
          "ApiPassword": {
            "type": "string",
            "description": "Api password for authentication",
            "minLength": 1
          },
          "EmailTo": {
            "type": "string",
            "description": "Send to email",
            "minLength": 1
          },
          "FromDateYYYYMMDD": {
            "type": "string",
            "description": "from date",
            "minLength": 1
          },
          "ToDateYYYYMMDD": {
            "type": "string",
            "description": "to date",
            "minLength": 1
          },
          "SendEmptyEmail": {
            "type": "boolean",
            "description": "send empty email if no documents were found",
            "default": false,
            "nullable": true
          },
          "ForceOriginal": {
            "type": "boolean",
            "description": "add original on the document",
            "default": false,
            "nullable": true
          },
          "DocumentType": {
            "type": "integer",
            "description": "document type to send , null or -1 for all , else the doc id",
            "format": "int32",
            "default": -1,
            "nullable": true
          }
        }
      }
    }
  }
}
